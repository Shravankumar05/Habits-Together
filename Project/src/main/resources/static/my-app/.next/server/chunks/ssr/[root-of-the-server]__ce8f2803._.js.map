{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/ProtectedRoute.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useEffect } from 'react'\r\n\r\ninterface ProtectedRouteProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function ProtectedRoute({ children }: ProtectedRouteProps) {\r\n    const { user, loading } = useAuth()\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        if (!loading && !user) {\r\n            router.push('/login')\r\n        }\r\n    }, [user, loading, router])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (!user) {\r\n        return null\r\n    }\r\n\r\n    return <>{children}</>\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAUe,SAAS,eAAe,EAAE,QAAQ,EAAuB;IACpE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAO,AAAD;IAChC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,CAAC,WAAW,CAAC,MAAM;YACnB,OAAO,IAAI,CAAC;QAChB;IACJ,GAAG;QAAC;QAAM;QAAS;KAAO;IAE1B,IAAI,SAAS;QACT,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAG3B;IAEA,IAAI,CAAC,MAAM;QACP,OAAO;IACX;IAEA,qBAAO;kBAAG;;AACd","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/lib/api.ts"],"sourcesContent":["import { supabase } from './supabase'\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:8080'\n\nasync function getAuthHeaders() {\n  const { data: { session } } = await supabase.auth.getSession()\n  \n  if (session?.access_token) {\n    console.log('Using real Supabase token for authenticated user');\n    return {\n      'Authorization': `Bearer ${session.access_token}`,\n      'Content-Type': 'application/json',\n    };\n  }\n  \n  console.error('No Supabase session found - user must be logged in');\n  throw new Error('User not authenticated - please log in');\n}\n\nexport interface Habit {\n  id: string \n  name: string\n  description?: string\n  color: string\n  userId: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface DailyCompletion {\n  id: string \n  habitId: string\n  userId: string\n  completionDate: string\n  completed: boolean\n  notes?: string\n  completedAt: string\n}\n\n// Habit API functions\nexport async function fetchHabits(): Promise<Habit[]> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/habits`, { headers })\n  \n  if (!response.ok) {\n    throw new Error('Failed to fetch habits')\n  }\n  \n  return response.json()\n}\n\nexport async function createHabit(habit: Omit<Habit, 'id' | 'createdAt' | 'updatedAt'>): Promise<Habit> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/habits`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(habit),\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to create habit')\n  }\n  \n  return response.json()\n}\n\nexport async function updateHabit(id: string, habit: Partial<Habit>): Promise<Habit> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/habits/${id}`, {\n    method: 'PUT',\n    headers,\n    body: JSON.stringify(habit),\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to update habit')\n  }\n  \n  return response.json()\n}\n\nexport async function deleteHabit(id: string): Promise<void> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/habits/${id}`, {\n    method: 'DELETE',\n    headers,\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to delete habit')\n  }\n}\n\n// Daily completion API functions\nexport async function toggleHabitCompletion(habitId: string, date: string): Promise<DailyCompletion | null> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/daily-completions/toggle`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({ habitId, date }),\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to toggle habit completion')\n  }\n  \n  const text = await response.text()\n  return text ? JSON.parse(text) : null\n}\n\nexport async function getHabitCompletionForDate(habitId: string, date: string): Promise<DailyCompletion | null> {\n  try {\n    console.log('getHabitCompletionForDate: Checking completion for habit:', habitId, 'date:', date);\n    \n    const headers = await getAuthHeaders();\n    \n    const response = await fetch(`${API_BASE_URL}/daily-completions/check?habitId=${habitId}&date=${date}`, {\n      method: 'GET',\n      headers,\n    });\n    \n    console.log('getHabitCompletionForDate: Response status:', response.status);\n    \n    if (!response.ok) {\n      if (response.status === 404) {\n        console.log('getHabitCompletionForDate: No completion record found');\n        return null; // No completion record found\n      }\n      console.error('getHabitCompletionForDate: Failed to check habit completion, status:', response.status);\n      throw new Error('Failed to check habit completion');\n    }\n    \n    const text = await response.text();\n    const result = text ? JSON.parse(text) : null;\n    console.log('getHabitCompletionForDate: Success, result:', result);\n    return result;\n  } catch (error) {\n    console.error('getHabitCompletionForDate: Error:', error);\n    throw error;\n  }\n}\n\nexport async function getCompletions(habitId: string, startDate: string, endDate: string): Promise<DailyCompletion[]> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/daily-completions?habitId=${habitId}&startDate=${startDate}&endDate=${endDate}`, {\n    method: 'GET',\n    headers,\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to fetch completions')\n  }\n  \n  return response.json()\n}\n\nexport async function updateCompletion(completion: Omit<DailyCompletion, 'id' | 'completedAt'>): Promise<DailyCompletion> {\n  const headers = await getAuthHeaders()\n  const response = await fetch(`${API_BASE_URL}/daily-completions`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(completion),\n  })\n  \n  if (!response.ok) {\n    throw new Error('Failed to update completion')\n  }\n  \n  return response.json()\n}\n\nexport async function checkServerHealth(): Promise<boolean> {\n  try {\n    const controller = new AbortController()\n    const timeoutId = setTimeout(() => controller.abort(), 5000) // 5 second timeout\n    \n    const response = await fetch(`${API_BASE_URL}/actuator/health`, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      signal: controller.signal,\n    })\n    \n    clearTimeout(timeoutId)\n    return response.ok\n  } catch (error) {\n    console.error('Server health check error:', error)\n    return false\n  }\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AAEA,MAAM,eAAe,6DAAwC;AAE7D,eAAe;IACb,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,UAAU;IAE5D,IAAI,SAAS,cAAc;QACzB,QAAQ,GAAG,CAAC;QACZ,OAAO;YACL,iBAAiB,CAAC,OAAO,EAAE,QAAQ,YAAY,EAAE;YACjD,gBAAgB;QAClB;IACF;IAEA,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AAuBO,eAAe;IACpB,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;QAAE;IAAQ;IAEjE,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,YAAY,KAAoD;IACpF,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;QACrD,QAAQ;QACR;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,YAAY,EAAU,EAAE,KAAqB;IACjE,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,EAAE,IAAI,EAAE;QAC3D,QAAQ;QACR;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,YAAY,EAAU;IAC1C,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,EAAE,IAAI,EAAE;QAC3D,QAAQ;QACR;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,eAAe,sBAAsB,OAAe,EAAE,IAAY;IACvE,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,yBAAyB,CAAC,EAAE;QACvE,QAAQ;QACR;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAS;QAAK;IACvC;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;AACnC;AAEO,eAAe,0BAA0B,OAAe,EAAE,IAAY;IAC3E,IAAI;QACF,QAAQ,GAAG,CAAC,6DAA6D,SAAS,SAAS;QAE3F,MAAM,UAAU,MAAM;QAEtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,iCAAiC,EAAE,QAAQ,MAAM,EAAE,MAAM,EAAE;YACtG,QAAQ;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,+CAA+C,SAAS,MAAM;QAE1E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,QAAQ,GAAG,CAAC;gBACZ,OAAO,MAAM,6BAA6B;YAC5C;YACA,QAAQ,KAAK,CAAC,wEAAwE,SAAS,MAAM;YACrG,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,SAAS,OAAO,KAAK,KAAK,CAAC,QAAQ;QACzC,QAAQ,GAAG,CAAC,+CAA+C;QAC3D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM;IACR;AACF;AAEO,eAAe,eAAe,OAAe,EAAE,SAAiB,EAAE,OAAe;IACtF,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,2BAA2B,EAAE,QAAQ,WAAW,EAAE,UAAU,SAAS,EAAE,SAAS,EAAE;QAC7H,QAAQ;QACR;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe,iBAAiB,UAAuD;IAC5F,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,kBAAkB,CAAC,EAAE;QAChE,QAAQ;QACR;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI,MAAM,mBAAmB;;QAEhF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,gBAAgB,CAAC,EAAE;YAC9D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,QAAQ,WAAW,MAAM;QAC3B;QAEA,aAAa;QACb,OAAO,SAAS,EAAE;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n// This check can be removed, it is just for tutorial purposes\nexport const hasEnvVars =\n  process.env.NEXT_PUBLIC_SUPABASE_URL &&\n  process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,MAAM,aACX","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n    {\n        variants: {\n            variant: {\n                default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n                destructive:\n                    \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n                outline:\n                    \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n                secondary:\n                    \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n                ghost: \"hover:bg-accent hover:text-accent-foreground\",\n                link: \"text-primary underline-offset-4 hover:underline\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n)\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\"\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACrB,wQACA;IACI,UAAU;QACN,SAAS;YACL,SAAS;YACT,aACI;YACJ,SACI;YACJ,WACI;YACJ,OAAO;YACP,MAAM;QACV;QACA,MAAM;YACF,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACV;IACJ;IACA,iBAAiB;QACb,SAAS;QACT,MAAM;IACV;AACJ;AASJ,MAAM,uBAAS,qMAAA,CAAA,aAAgB,CAC3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACtD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n    extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n    ({ className, type, ...props }, ref) => {\n        return (\n            <input\n                type={type}\n                className={cn(\n                    \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAC1B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC5B,qBACI,8OAAC;QACG,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,gWACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/habits/HabitForm.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { type Habit } from '@/lib/api'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { X, Save, Palette } from 'lucide-react'\r\n\r\ninterface HabitFormProps {\r\n    habit?: Habit\r\n    onSubmit: (habit: Omit<Habit, 'id' | 'createdAt' | 'updatedAt'>) => void\r\n    onCancel: () => void\r\n}\r\n\r\nconst colors = [\r\n    { hex: '#3b82f6', name: 'Blue' },\r\n    { hex: '#ef4444', name: 'Red' },\r\n    { hex: '#10b981', name: 'Green' },\r\n    { hex: '#f59e0b', name: 'Amber' },\r\n    { hex: '#8b5cf6', name: 'Purple' },\r\n    { hex: '#ec4899', name: 'Pink' },\r\n    { hex: '#06b6d4', name: 'Cyan' },\r\n    { hex: '#84cc16', name: 'Lime' }\r\n]\r\n\r\nexport default function HabitForm({ habit, onSubmit, onCancel }: HabitFormProps) {\r\n    const [name, setName] = useState(habit?.name || '')\r\n    const [description, setDescription] = useState(habit?.description || '')\r\n    const [color, setColor] = useState(habit?.color || colors[0].hex)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        try {\r\n            await onSubmit({\r\n                name,\r\n                description,\r\n                color,\r\n                userId: habit?.userId || '',\r\n            })\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"glass-card p-8 max-w-2xl mx-auto\">\r\n            <div className=\"flex items-center justify-between mb-8\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-ocean-800 mb-2\">\r\n                        {habit ? 'Edit Habit' : 'Create New Habit'}\r\n                    </h2>\r\n                    <p className=\"text-ocean-600\">\r\n                        {habit ? 'Update your habit details' : 'Add a new habit to track'}\r\n                    </p>\r\n                </div>\r\n                <Button\r\n                    onClick={onCancel}\r\n                    className=\"w-10 h-10 p-0 bg-red-50/50 border border-red-200/50 text-red-500 hover:bg-red-100/50\"\r\n                >\r\n                    <X className=\"w-5 h-5\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-ocean-700\">\r\n                        Habit Name\r\n                    </label>\r\n                    <Input\r\n                        id=\"name\"\r\n                        placeholder=\"Enter habit name...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                        className=\"glass-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                    <label htmlFor=\"description\" className=\"block text-sm font-medium text-ocean-700\">\r\n                        Description (Optional)\r\n                    </label>\r\n                    <textarea\r\n                        id=\"description\"\r\n                        placeholder=\"Enter habit description...\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        rows={3}\r\n                        className=\"w-full glass-input resize-none\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <Palette className=\"w-5 h-5 text-ocean-600\" />\r\n                        <label className=\"text-sm font-medium text-ocean-700\">\r\n                            Choose Color\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-4 gap-3\">\r\n                        {colors.map((c) => (\r\n                            <button\r\n                                key={c.hex}\r\n                                type=\"button\"\r\n                                className={`\r\n                                    relative p-4 rounded-xl border-2 transition-all duration-300 group\r\n                                    ${color === c.hex \r\n                                        ? 'border-ocean-400 shadow-soft' \r\n                                        : 'border-white/30 hover:border-ocean-300'\r\n                                    }\r\n                                    glass-morphism\r\n                                `}\r\n                                onClick={() => setColor(c.hex)}\r\n                            >\r\n                                <div\r\n                                    className=\"w-full h-6 rounded-lg mb-2 shadow-soft\"\r\n                                    style={{ backgroundColor: c.hex }}\r\n                                />\r\n                                <div className=\"text-xs text-ocean-600 font-medium\">\r\n                                    {c.name}\r\n                                </div>\r\n                                {color === c.hex && (\r\n                                    <div className=\"absolute top-2 right-2 w-3 h-3 bg-ocean-500 rounded-full\" />\r\n                                )}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex space-x-4 pt-6 border-t border-white/20\">\r\n                    <Button \r\n                        type=\"submit\" \r\n                        disabled={loading}\r\n                        className=\"glass-button flex-1 flex items-center justify-center space-x-2 py-3\"\r\n                    >\r\n                        {loading ? (\r\n                            <div className=\"w-5 h-5 border-2 border-current border-t-transparent rounded-full animate-spin\" />\r\n                        ) : (\r\n                            <Save className=\"w-5 h-5\" />\r\n                        )}\r\n                        <span className=\"font-medium\">\r\n                            {loading ? 'Saving...' : habit ? 'Update Habit' : 'Create Habit'}\r\n                        </span>\r\n                    </Button>\r\n                    <Button \r\n                        type=\"button\" \r\n                        onClick={onCancel}\r\n                        className=\"px-8 py-3 bg-white/10 border border-white/20 text-ocean-600 hover:bg-white/20 font-medium rounded-xl\"\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/habits/HabitItem.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { updateHabit, deleteHabit, toggleHabitCompletion, getHabitCompletionForDate, type Habit } from '@/lib/api'\nimport HabitForm from './HabitForm'\nimport { Button } from '@/components/ui/button'\nimport { Check, Edit, Trash2, Circle } from 'lucide-react'\n\ninterface HabitItemProps {\n    habit: Habit\n    onUpdate: (habit: Habit) => void\n    onDelete: (habitId: number) => void\n}\n\nexport default function HabitItem({ habit, onUpdate, onDelete }: HabitItemProps) {\n    const [isEditing, setIsEditing] = useState(false)\n    const [isCompleted, setIsCompleted] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [checkingCompletion, setCheckingCompletion] = useState(true)\n\n    const today = new Date().toISOString().split('T')[0]\n\n    // Check completion status when component mounts or habit changes\n    useEffect(() => {\n        const checkCompletionStatus = async () => {\n            try {\n                setCheckingCompletion(true)\n                const completion = await getHabitCompletionForDate(habit.id, today)\n                setIsCompleted(completion?.completed || false)\n                console.log(`Habit ${habit.name} completion status for ${today}:`, completion?.completed || false)\n            } catch (err) {\n                console.error('Error checking completion status:', err)\n                setIsCompleted(false)\n            } finally {\n                setCheckingCompletion(false)\n            }\n        }\n\n        checkCompletionStatus()\n    }, [habit.id, today])\n\n    const handleUpdate = async (habitData: Omit<Habit, 'id' | 'createdAt' | 'updatedAt'>) => {\n        try {\n            const updatedHabit = await updateHabit(habit.id, habitData)\n            onUpdate(updatedHabit)\n            setIsEditing(false)\n        } catch (err) {\n            console.error('Error updating habit:', err)\n        }\n    }\n\n    const handleDelete = async () => {\n        if (confirm('Are you sure you want to delete this habit?')) {\n            try {\n                await deleteHabit(habit.id)\n                onDelete(habit.id)\n            } catch (err) {\n                console.error('Error deleting habit:', err)\n            }\n        }\n    }\n\n    const handleToggleCompletion = async () => {\n        try {\n            setLoading(true)\n            const result = await toggleHabitCompletion(habit.id, today)\n            // Update the completion state based on the API response\n            if (result) {\n                setIsCompleted(result.completed)\n                console.log(`Habit ${habit.name} toggled to:`, result.completed)\n            } else {\n                // If no result, toggle the current state\n                setIsCompleted(!isCompleted)\n                console.log(`Habit ${habit.name} toggled to:`, !isCompleted)\n            }\n        } catch (err) {\n            console.error('Error toggling completion:', err)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    if (isEditing) {\n        return (\n            <div className=\"animate-in\">\n                <HabitForm\n                    habit={habit}\n                    onSubmit={handleUpdate}\n                    onCancel={() => setIsEditing(false)}\n                />\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"glass-card p-6 hover-lift group relative overflow-hidden\">\n            {/* Color accent */}\n            <div\n                className=\"absolute top-0 left-0 w-full h-1 rounded-t-2xl\"\n                style={{ backgroundColor: habit.color }}\n            />\n            \n            {/* Status indicator */}\n            <div className=\"absolute top-4 right-4\">\n                <div \n                    className=\"w-3 h-3 rounded-full\"\n                    style={{ backgroundColor: habit.color, opacity: 0.6 }}\n                />\n            </div>\n\n            <div className=\"space-y-4\">\n                <div className=\"flex items-start justify-between pr-6\">\n                    <div className=\"flex items-center space-x-3\">\n                        <div \n                            className=\"w-12 h-12 rounded-2xl flex items-center justify-center shadow-soft\"\n                            style={{ backgroundColor: `${habit.color}20` }}\n                        >\n                            <Circle className=\"w-6 h-6\" style={{ color: habit.color }} />\n                        </div>\n                        <div>\n                            <h3 className=\"text-lg font-semibold text-ocean-800\">\n                                {habit.name}\n                            </h3>\n                            {habit.description && (\n                                <p className=\"text-sm text-ocean-600\">\n                                    {habit.description}\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flex items-center justify-between pt-4 border-t border-white/20\">\n                    <Button\n                        onClick={handleToggleCompletion}\n                        disabled={loading || checkingCompletion}\n                        className={`\n                            flex items-center space-x-2 px-4 py-2 rounded-xl font-medium\n                            transition-all duration-300 ${\n                                isCompleted \n                                    ? 'bg-green-100 text-green-700 border border-green-200' \n                                    : 'glass-button'\n                            }\n                        `}\n                    >\n                        {loading ? (\n                            <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\" />\n                        ) : (\n                            <Check className=\"w-4 h-4\" />\n                        )}\n                        <span className=\"text-sm\">\n                            {isCompleted ? 'Completed' : 'Mark Done'}\n                        </span>\n                    </Button>\n\n                    <div className=\"flex space-x-2\">\n                        <Button\n                            onClick={() => setIsEditing(true)}\n                            className=\"w-10 h-10 p-0 glass-button\"\n                        >\n                            <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button\n                            onClick={handleDelete}\n                            className=\"w-10 h-10 p-0 bg-red-50/50 border border-red-200/50 text-red-500 hover:bg-red-100/50 transition-all duration-300\"\n                        >\n                            <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                    </div>\n                </div>\n\n                {/* Progress indicator */}\n                <div className=\"flex items-center justify-between text-xs text-ocean-500\">\n                    <span>Today's Progress</span>\n                    <span className=\"font-medium\">\n                        {isCompleted ? 'Complete' : 'Pending'}\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/habits/HabitList.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { fetchHabits, createHabit, type Habit } from '@/lib/api'\nimport HabitItem from './HabitItem'\nimport HabitForm from './HabitForm'\nimport { Button } from '@/components/ui/button'\nimport { Plus, AlertTriangle, Target } from 'lucide-react'\n\nexport default function HabitList() {\n    const { user } = useAuth()\n    const [habits, setHabits] = useState<Habit[]>([])\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n    const [showForm, setShowForm] = useState(false)\n\n    useEffect(() => {\n        loadHabits()\n    }, [])\n\n    const loadHabits = async () => {\n        try {\n            console.log('=== INTENSIVE DEBUGGING: HabitList loadHabits START ===');\n            console.log('HabitList: Loading habits from API...');\n            \n            setLoading(true)\n            const data = await fetchHabits()\n            console.log('DEBUGGING: fetchHabits returned:', data.length, 'habits');\n            console.log('DEBUGGING: Habits data:', JSON.stringify(data, null, 2));\n            \n            setHabits(data)\n            setError('')\n            console.log('DEBUGGING: Set habits state with:', data.length, 'habits');\n            console.log('=== INTENSIVE DEBUGGING: HabitList loadHabits END ===');\n        } catch (error) {\n            console.error('=== CRITICAL ERROR in HabitList loadHabits ===');\n            console.error('Error type:', typeof error);\n            console.error('Error message:', error?.message);\n            console.error('Error stack:', error?.stack);\n            console.error('Full error object:', error);\n            setError('Failed to load habits')\n            setHabits([]);\n        } finally {\n            setLoading(false)\n        }\n    };\n\n    const handleCreateHabit = async (habitData: Omit<Habit, 'id' | 'createdAt' | 'updatedAt'>) => {\n        try {\n            const newHabit = await createHabit({\n                ...habitData,\n                userId: user?.id || '',\n            })\n            setHabits(prev => [...prev, newHabit])\n            setShowForm(false)\n        } catch (err) {\n            console.error('Error creating habit:', err)\n            setError('Failed to create habit')\n        }\n    }\n\n    const handleHabitUpdate = (updatedHabit: Habit) => {\n        setHabits(prev => prev.map(habit =>\n            habit.id === updatedHabit.id ? updatedHabit : habit\n        ))\n    }\n\n    const handleHabitDelete = (habitId: number) => {\n        setHabits(prev => prev.filter(habit => habit.id !== habitId))\n    }\n\n    if (loading) {\n        return (\n            <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n                <div className=\"relative\">\n                    <div className=\"w-16 h-16 border-4 border-ocean-200 rounded-full animate-spin\">\n                        <div className=\"absolute top-0 left-0 w-4 h-4 bg-ocean-500 rounded-full\"></div>\n                    </div>\n                </div>\n                <p className=\"text-ocean-600 text-sm\">Loading your habits...</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-8\">\n            <div className=\"flex justify-between items-center\">\n                <div>\n                    <h2 className=\"text-xl font-semibold text-ocean-800 mb-1\">Your Habits</h2>\n                    <p className=\"text-ocean-600 text-sm\">\n                        {habits.length} {habits.length === 1 ? 'habit' : 'habits'} tracked\n                    </p>\n                </div>\n                <Button \n                    onClick={() => setShowForm(true)} \n                    className=\"glass-button flex items-center space-x-2\"\n                >\n                    <Plus className=\"w-4 h-4\" />\n                    <span>Add Habit</span>\n                </Button>\n            </div>\n\n            {error && (\n                <div className=\"glass-card border-red-200 bg-red-50/50 p-4\">\n                    <div className=\"flex items-center space-x-3\">\n                        <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                        <div>\n                            <p className=\"text-red-700 font-medium\">Error</p>\n                            <p className=\"text-red-600 text-sm\">{error}</p>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {showForm && (\n                <div className=\"animate-in\">\n                    <HabitForm\n                        onSubmit={handleCreateHabit}\n                        onCancel={() => setShowForm(false)}\n                    />\n                </div>\n            )}\n\n            {habits.length === 0 ? (\n                <div className=\"text-center py-16\">\n                    <div className=\"glass-card p-12 max-w-md mx-auto\">\n                        <div className=\"w-20 h-20 bg-gradient-to-br from-ocean-100 to-cream-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                            <Target className=\"w-10 h-10 text-ocean-500\" />\n                        </div>\n                        <h3 className=\"text-lg font-semibold text-ocean-800 mb-2\">No habits yet</h3>\n                        <p className=\"text-ocean-600 text-sm mb-6\">\n                            Create your first habit to start building better routines\n                        </p>\n                        <Button \n                            onClick={() => setShowForm(true)}\n                            className=\"glass-button\"\n                        >\n                            Create Your First Habit\n                        </Button>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"space-y-4\">\n                    {habits.map((habit, index) => (\n                        <div \n                            key={habit.id} \n                            className=\"animate-in\"\n                            style={{ animationDelay: `${index * 100}ms` }}\n                        >\n                            <HabitItem\n                                habit={habit}\n                                onUpdate={handleHabitUpdate}\n                                onDelete={handleHabitDelete}\n                            />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/GroupList.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Users, ChevronRight, Calendar } from 'lucide-react'\nimport { Group } from './GroupPanel'\n\ninterface GroupListProps {\n    groups: Group[]\n    onSelectGroup: (group: Group) => void\n}\n\nexport default function GroupList({ groups, onSelectGroup }: GroupListProps) {\n    if (groups.length === 0) {\n        return (\n            <div className=\"text-center py-8\">\n                <Users className=\"w-12 h-12 text-ocean-300 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-ocean-600 mb-2\">\n                    No groups yet\n                </h3>\n                <p className=\"text-ocean-500 mb-4\">\n                    Create your first group to start building habits together\n                </p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-3\">\n            {groups.filter(group => group && group.id && group.name).map((group) => (\n                <div\n                    key={group.id}\n                    onClick={() => {\n                        console.log('GroupList: Clicking group:', group);\n                        if (group && group.id) {\n                            onSelectGroup(group);\n                        } else {\n                            console.error('GroupList: Invalid group clicked:', group);\n                        }\n                    }}\n                    className=\"glass-card p-4 cursor-pointer hover:bg-white/20 transition-all duration-200 group\"\n                >\n                    <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-3 mb-2\">\n                                <div className=\"w-8 h-8 bg-gradient-to-br from-purple-400 to-purple-600 rounded-lg flex items-center justify-center\">\n                                    <Users className=\"w-4 h-4 text-white\" />\n                                </div>\n                                <div>\n                                    <h4 className=\"font-semibold text-ocean-800 group-hover:text-ocean-900\">\n                                        {group.name}\n                                    </h4>\n                                    {group.description && (\n                                        <p className=\"text-sm text-ocean-600\">\n                                            {group.description}\n                                        </p>\n                                    )}\n                                </div>\n                            </div>\n                            \n                            <div className=\"flex items-center space-x-4 text-xs text-ocean-500\">\n                                <div className=\"flex items-center space-x-1\">\n                                    <Users className=\"w-3 h-3\" />\n                                    <span>{group.member_count || 0} members</span>\n                                </div>\n                                <div className=\"flex items-center space-x-1\">\n                                    <Calendar className=\"w-3 h-3\" />\n                                    <span>\n                                        Created {new Date(group.created_at).toLocaleDateString()}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <ChevronRight className=\"w-5 h-5 text-ocean-400 group-hover:text-ocean-600 transition-colors\" />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAHA;;;AAWe,SAAS,UAAU,EAAE,MAAM,EAAE,aAAa,EAAkB;IACvE,IAAI,OAAO,MAAM,KAAK,GAAG;QACrB,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC,oMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;8BACjB,8OAAC;oBAAG,WAAU;8BAA0C;;;;;;8BAGxD,8OAAC;oBAAE,WAAU;8BAAsB;;;;;;;;;;;;IAK/C;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACV,OAAO,MAAM,CAAC,CAAA,QAAS,SAAS,MAAM,EAAE,IAAI,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,sBAC1D,8OAAC;gBAEG,SAAS;oBACL,QAAQ,GAAG,CAAC,8BAA8B;oBAC1C,IAAI,SAAS,MAAM,EAAE,EAAE;wBACnB,cAAc;oBAClB,OAAO;wBACH,QAAQ,KAAK,CAAC,qCAAqC;oBACvD;gBACJ;gBACA,WAAU;0BAEV,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;sDACX,cAAA,8OAAC,oMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;;;;;;sDAErB,8OAAC;;8DACG,8OAAC;oDAAG,WAAU;8DACT,MAAM,IAAI;;;;;;gDAEd,MAAM,WAAW,kBACd,8OAAC;oDAAE,WAAU;8DACR,MAAM,WAAW;;;;;;;;;;;;;;;;;;8CAMlC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC,oMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;8DACjB,8OAAC;;wDAAM,MAAM,YAAY,IAAI;wDAAE;;;;;;;;;;;;;sDAEnC,8OAAC;4CAAI,WAAU;;8DACX,8OAAC,0MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC;;wDAAK;wDACO,IAAI,KAAK,MAAM,UAAU,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;sCAMtE,8OAAC,sNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;;;;;;;eA3CvB,MAAM,EAAE;;;;;;;;;;AAiDjC","debugId":null}},
    {"offset": {"line": 1530, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/GroupHabitList.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Check, X, Circle, CheckCircle2, User } from 'lucide-react'\nimport { GroupHabit, GroupMember, GroupHabitCompletion } from './GroupView'\nimport { useState, useEffect } from 'react'\n\ninterface GroupHabitListProps {\n    habits: GroupHabit[]\n    members: GroupMember[]\n    completions: GroupHabitCompletion[]\n    onToggleCompletion: (habitId: string, userId: string) => void\n}\n\nexport default function GroupHabitList({ \n    habits, \n    members, \n    completions, \n    onToggleCompletion \n}: GroupHabitListProps) {\n    const today = new Date().toISOString().split('T')[0]\n    const [currentUserId, setCurrentUserId] = useState<string>('')\n\n    useEffect(() => {\n        const getCurrentUserId = async () => {\n            try {\n                // Get current user ID from Supabase session\n                const { createClient } = await import('@supabase/supabase-js');\n                \n                const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n                const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n                \n                if (!supabaseUrl || !supabaseKey) {\n                    console.error('GroupHabitList: Supabase configuration missing');\n                    return;\n                }\n                \n                const supabase = createClient(supabaseUrl, supabaseKey);\n                const { data: { session } } = await supabase.auth.getSession();\n                \n                if (session?.user?.id) {\n                    console.log('GroupHabitList: Current user ID retrieved:', session.user.id);\n                    setCurrentUserId(session.user.id);\n                } else {\n                    console.log('GroupHabitList: No user session found');\n                    setCurrentUserId('anonymous-user');\n                }\n            } catch (error) {\n                console.error('GroupHabitList: Error getting current user ID:', error);\n                setCurrentUserId('anonymous-user');\n            }\n        };\n\n        getCurrentUserId();\n    }, []);\n\n    const getCompletionStatus = (habitId: string, userId: string) => {\n        const completion = completions.find(\n            c => c.groupHabitId === habitId && \n                 c.userId === userId && \n                 c.completionDate === today\n        )\n        return completion?.completed || false\n    }\n\n    const getCompletedCount = (habitId: string) => {\n        return completions.filter(\n            c => c.groupHabitId === habitId && \n                 c.completionDate === today && \n                 c.completed\n        ).length\n    }\n\n    if (habits.length === 0) {\n        return (\n            <div className=\"text-center py-8\">\n                <Circle className=\"w-12 h-12 text-ocean-300 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-ocean-600 mb-2\">\n                    No group habits yet\n                </h3>\n                <p className=\"text-ocean-500\">\n                    Add your first habit to start tracking together\n                </p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-4\">\n            {habits.map((habit) => {\n                const completedCount = getCompletedCount(habit.id)\n                const totalMembers = members.length\n                const completionPercentage = totalMembers > 0 ? (completedCount / totalMembers) * 100 : 0\n\n                return (\n                    <div\n                        key={habit.id}\n                        className=\"glass-card p-4 border-l-4 transition-all duration-200\"\n                        style={{ borderLeftColor: habit.color }}\n                    >\n                        {/* Habit Header */}\n                        <div className=\"flex items-center justify-between mb-4\">\n                            <div className=\"flex items-center space-x-3\">\n                                <div \n                                    className=\"w-8 h-8 rounded-lg flex items-center justify-center text-white font-medium text-sm\"\n                                    style={{ backgroundColor: habit.color }}\n                                >\n                                    {habit.name.charAt(0).toUpperCase()}\n                                </div>\n                                <div>\n                                    <h4 className=\"font-semibold text-ocean-800\">\n                                        {habit.name}\n                                    </h4>\n                                    {habit.description && (\n                                        <p className=\"text-sm text-ocean-600\">\n                                            {habit.description}\n                                        </p>\n                                    )}\n                                </div>\n                            </div>\n                            \n                            {/* Progress Summary */}\n                            <div className=\"text-right\">\n                                <div className=\"text-sm font-medium text-ocean-800\">\n                                    {completedCount}/{totalMembers} completed\n                                </div>\n                                <div className=\"w-16 h-2 bg-ocean-100 rounded-full overflow-hidden\">\n                                    <div \n                                        className=\"h-full bg-gradient-to-r from-green-400 to-green-500 transition-all duration-300\"\n                                        style={{ width: `${completionPercentage}%` }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Member Completion Status */}\n                        <div className=\"space-y-2\">\n                            {members.map((member) => {\n                                const isCompleted = getCompletionStatus(habit.id, member.userId)\n                                const isCurrentUser = member.userId === currentUserId\n\n                                return (\n                                    <div\n                                        key={member.id}\n                                        className=\"flex items-center justify-between p-2 rounded-lg bg-white/30\"\n                                    >\n                                        <div className=\"flex items-center space-x-3\">\n                                            <div className=\"w-6 h-6 bg-gradient-to-br from-ocean-400 to-ocean-600 rounded-full flex items-center justify-center\">\n                                                <User className=\"w-3 h-3 text-white\" />\n                                            </div>\n                                            <span className=\"text-sm font-medium text-ocean-800\">\n                                                {member.display_name || (member.email ? member.email.split('@')[0] : 'Unknown User')}\n                                                {isCurrentUser && (\n                                                    <span className=\"text-xs text-ocean-500 ml-1\">(You)</span>\n                                                )}\n                                            </span>\n                                        </div>\n\n                                        <div className=\"flex items-center space-x-2\">\n                                            {isCompleted ? (\n                                                <div className=\"flex items-center space-x-1 text-green-600\">\n                                                    <CheckCircle2 className=\"w-4 h-4\" />\n                                                    <span className=\"text-xs font-medium\">Done</span>\n                                                </div>\n                                            ) : (\n                                                <div className=\"flex items-center space-x-1 text-ocean-400\">\n                                                    <Circle className=\"w-4 h-4\" />\n                                                    <span className=\"text-xs font-medium\">Pending</span>\n                                                </div>\n                                            )}\n\n                                            {/* Only current user can toggle their own completion */}\n                                            {isCurrentUser && (\n                                                <Button\n                                                    onClick={() => onToggleCompletion(habit.id, member.userId)}\n                                                    className={`w-8 h-8 p-0 rounded-full transition-all duration-200 ${\n                                                        isCompleted\n                                                            ? 'bg-green-500 hover:bg-green-600 text-white'\n                                                            : 'bg-ocean-200 hover:bg-ocean-300 text-ocean-600'\n                                                    }`}\n                                                >\n                                                    {isCompleted ? (\n                                                        <Check className=\"w-4 h-4\" />\n                                                    ) : (\n                                                        <Circle className=\"w-4 h-4\" />\n                                                    )}\n                                                </Button>\n                                            )}\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface TextareaProps\r\n    extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n    ({ className, ...props }, ref) => {\r\n        return (\r\n            <textarea\r\n                className={cn(\r\n                    \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n                    className\r\n                )}\r\n                ref={ref}\r\n                {...props}\r\n            />\r\n        )\r\n    }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,qMAAA,CAAA,aAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACtB,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,wSACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1899, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/CreateGroupHabitModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { X, Circle, Plus } from 'lucide-react'\nimport { GroupHabit } from './GroupView'\n\ninterface CreateGroupHabitModalProps {\n    isOpen: boolean\n    onClose: () => void\n    onCreateHabit: (habit: GroupHabit) => void\n    groupId: string\n}\n\nconst HABIT_COLORS = [\n    '#3B82F6', // Blue\n    '#10B981', // Green\n    '#F59E0B', // Yellow\n    '#EF4444', // Red\n    '#8B5CF6', // Purple\n    '#06B6D4', // Cyan\n    '#F97316', // Orange\n    '#84CC16', // Lime\n    '#EC4899', // Pink\n    '#6B7280'  // Gray\n]\n\nexport default function CreateGroupHabitModal({ \n    isOpen, \n    onClose, \n    onCreateHabit, \n    groupId \n}: CreateGroupHabitModalProps) {\n    const [habitName, setHabitName] = useState('')\n    const [habitDescription, setHabitDescription] = useState('')\n    const [selectedColor, setSelectedColor] = useState(HABIT_COLORS[0])\n    const [loading, setLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({})\n\n    const validateForm = () => {\n        const newErrors: { [key: string]: string } = {}\n\n        if (!habitName.trim()) {\n            newErrors.habitName = 'Habit name is required'\n        }\n\n        setErrors(newErrors)\n        return Object.keys(newErrors).length === 0\n    }\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        \n        if (!validateForm()) {\n            return\n        }\n\n        setLoading(true)\n\n        try {\n            console.log('CreateGroupHabitModal: Creating group habit for group:', groupId);\n            \n            // Get authentication token from Supabase session\n            const { createClient } = await import('@supabase/supabase-js');\n            \n            const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n            const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n            \n            if (!supabaseUrl || !supabaseKey) {\n                throw new Error('Supabase configuration missing');\n            }\n            \n            const supabase = createClient(supabaseUrl, supabaseKey);\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n            \n            if (sessionError) {\n                console.error('CreateGroupHabitModal: Session error:', sessionError);\n                throw new Error('Failed to get authentication session');\n            }\n            \n            const token = session?.access_token;\n            console.log('CreateGroupHabitModal: Token retrieved:', token ? 'SUCCESS' : 'FAILED');\n            \n            if (!token) {\n                throw new Error('No authentication token available. Please log in again.');\n            }\n\n            // Make real API call to create group habit\n            const habitData = {\n                name: habitName.trim(),\n                description: habitDescription.trim() || undefined,\n                color: selectedColor\n            };\n\n            console.log('CreateGroupHabitModal: Sending habit data:', habitData);\n\n            const response = await fetch(`http://localhost:8080/api/groups/${groupId}/habits`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(habitData)\n            });\n\n            console.log('CreateGroupHabitModal: API response status:', response.status);\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('CreateGroupHabitModal: API Error:', response.status, errorText);\n                throw new Error(`Failed to create group habit: ${response.status}`);\n            }\n\n            const newHabit = await response.json();\n            console.log('CreateGroupHabitModal: Group habit created successfully:', newHabit);\n\n            onCreateHabit(newHabit);\n            \n            // Reset form\n            setHabitName('');\n            setHabitDescription('');\n            setSelectedColor(HABIT_COLORS[0]);\n            setErrors({});\n            \n            // Close modal\n            onClose();\n        } catch (error) {\n            console.error('CreateGroupHabitModal: Error creating group habit:', error);\n            setErrors({ general: error instanceof Error ? error.message : 'Failed to create group habit' });\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const handleClose = () => {\n        if (!loading) {\n            setHabitName('')\n            setHabitDescription('')\n            setSelectedColor(HABIT_COLORS[0])\n            setErrors({})\n            onClose()\n        }\n    }\n\n    if (!isOpen) return null\n\n    return (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <div className=\"bg-white rounded-2xl shadow-2xl max-w-md w-full border border-gray-200\">\n                <div className=\"p-6\">\n                    {/* Header */}\n                    <div className=\"flex items-center justify-between mb-6\">\n                        <div className=\"flex items-center space-x-3\">\n                            <div \n                                className=\"w-8 h-8 rounded-lg flex items-center justify-center text-white font-medium\"\n                                style={{ backgroundColor: selectedColor }}\n                            >\n                                <Circle className=\"w-4 h-4\" />\n                            </div>\n                            <h2 className=\"text-xl font-bold text-ocean-800\">\n                                Add Group Habit\n                            </h2>\n                        </div>\n                        <Button\n                            onClick={handleClose}\n                            disabled={loading}\n                            className=\"w-8 h-8 p-0 glass-button-sm\"\n                        >\n                            <X className=\"w-4 h-4\" />\n                        </Button>\n                    </div>\n\n                    {/* Form */}\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        {/* Habit Name */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-ocean-700 mb-2\">\n                                Habit Name *\n                            </label>\n                            <Input\n                                type=\"text\"\n                                value={habitName}\n                                onChange={(e) => setHabitName(e.target.value)}\n                                placeholder=\"e.g., Take Morning Vitamins, 30-min Walk\"\n                                disabled={loading}\n                                className={errors.habitName ? 'border-red-300' : ''}\n                            />\n                            {errors.habitName && (\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.habitName}</p>\n                            )}\n                        </div>\n\n                        {/* Habit Description */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-ocean-700 mb-2\">\n                                Description (Optional)\n                            </label>\n                            <Textarea\n                                value={habitDescription}\n                                onChange={(e) => setHabitDescription(e.target.value)}\n                                placeholder=\"Add details about this habit...\"\n                                disabled={loading}\n                                rows={3}\n                            />\n                        </div>\n\n                        {/* Color Selection */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-ocean-700 mb-2\">\n                                Choose Color\n                            </label>\n                            <div className=\"grid grid-cols-5 gap-2\">\n                                {HABIT_COLORS.map((color) => (\n                                    <button\n                                        key={color}\n                                        type=\"button\"\n                                        onClick={() => setSelectedColor(color)}\n                                        disabled={loading}\n                                        className={`w-10 h-10 rounded-lg transition-all duration-200 ${\n                                            selectedColor === color\n                                                ? 'ring-2 ring-ocean-400 ring-offset-2 scale-110'\n                                                : 'hover:scale-105'\n                                        }`}\n                                        style={{ backgroundColor: color }}\n                                    >\n                                        {selectedColor === color && (\n                                            <div className=\"w-full h-full flex items-center justify-center\">\n                                                <div className=\"w-2 h-2 bg-white rounded-full\" />\n                                            </div>\n                                        )}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n\n                        {/* Submit Buttons */}\n                        <div className=\"flex space-x-3 pt-4\">\n                            <Button\n                                type=\"button\"\n                                onClick={handleClose}\n                                disabled={loading}\n                                className=\"flex-1 glass-button-secondary\"\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={loading}\n                                className=\"flex-1 glass-button flex items-center justify-center space-x-2\"\n                            >\n                                {loading ? (\n                                    <>\n                                        <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\" />\n                                        <span>Creating...</span>\n                                    </>\n                                ) : (\n                                    <>\n                                        <Plus className=\"w-4 h-4\" />\n                                        <span>Add Habit</span>\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2292, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/GroupView.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { ArrowLeft, Plus, Users, Settings, UserCheck, UserX } from 'lucide-react'\nimport { Group } from './GroupPanel'\nimport GroupHabitList from './GroupHabitList'\nimport CreateGroupHabitModal from './CreateGroupHabitModal'\n\nexport interface GroupHabit {\n    id: string\n    groupId: string\n    name: string\n    description?: string\n    color: string\n    createdBy: string\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface GroupMember {\n    id: string\n    userId: string\n    email: string\n    displayName?: string\n    role: 'admin' | 'member'\n    joinedAt: string\n}\n\nexport interface GroupHabitCompletion {\n    id: string\n    groupHabitId: string\n    userId: string\n    completionDate: string\n    completed: boolean\n    notes?: string\n    completedAt: string\n}\n\ninterface GroupViewProps {\n    group: Group\n    onBack: () => void\n}\n\nexport default function GroupView({ group, onBack }: GroupViewProps) {\n    const [groupHabits, setGroupHabits] = useState<GroupHabit[]>([])\n    const [groupMembers, setGroupMembers] = useState<GroupMember[]>([])\n    const [completions, setCompletions] = useState<GroupHabitCompletion[]>([])\n    const [showCreateHabitModal, setShowCreateHabitModal] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        const loadGroupData = async () => {\n            console.log('GroupView: Loading data for group:', group);\n            \n            if (!group || !group.id) {\n                console.error('GroupView: Invalid group provided:', group);\n                setGroupHabits([]);\n                setGroupMembers([]);\n                setCompletions([]);\n                return;\n            }\n\n            try {\n                // Get authentication token from Supabase session\n                const { createClient } = await import('@supabase/supabase-js');\n                \n                const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n                const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n                \n                if (!supabaseUrl || !supabaseKey) {\n                    throw new Error('Supabase configuration missing');\n                }\n                \n                const supabase = createClient(supabaseUrl, supabaseKey);\n                const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n                \n                if (sessionError) {\n                    console.error('GroupView: Session error:', sessionError);\n                    throw new Error('Failed to get authentication session');\n                }\n                \n                const token = session?.access_token;\n                console.log('GroupView: Token retrieved:', token ? 'SUCCESS' : 'FAILED');\n                console.log('GroupView: Token length:', token?.length || 0);\n                \n                if (!token) {\n                    throw new Error('No authentication token available. Please log in again.');\n                }\n\n                const headers = {\n                    'Authorization': `Bearer ${token}`\n                };\n\n                console.log('GroupView: Making API calls for group ID:', group.id);\n\n                // Load group habits\n                const habitsResponse = await fetch(`http://localhost:8080/api/groups/${group.id}/habits`, { headers });\n                if (habitsResponse.ok) {\n                    const habits = await habitsResponse.json();\n                    console.log('GroupView: Loaded habits:', habits);\n                    setGroupHabits(habits);\n                } else {\n                    console.error('GroupView: Failed to load habits:', habitsResponse.status);\n                    setGroupHabits([]);\n                }\n\n                // Load group members with real emails\n                const membersResponse = await fetch(`http://localhost:8080/api/groups/${group.id}`, { headers });\n                if (membersResponse.ok) {\n                    const groupDetails = await membersResponse.json();\n                    console.log('GroupView: Loaded group details:', groupDetails);\n                    setGroupMembers(groupDetails.members || []);\n                } else {\n                    console.error('GroupView: Failed to load group details:', membersResponse.status);\n                    setGroupMembers([]);\n                }\n\n                // Load today's completions\n                const today = new Date().toISOString().split('T')[0];\n                const completionsResponse = await fetch(`http://localhost:8080/api/groups/${group.id}/habits/completions?date=${today}`, { headers });\n                if (completionsResponse.ok) {\n                    const todayCompletions = await completionsResponse.json();\n                    console.log('GroupView: Loaded completions:', todayCompletions);\n                    setCompletions(todayCompletions);\n                } else {\n                    console.error('GroupView: Failed to load completions:', completionsResponse.status);\n                    setCompletions([]);\n                }\n            } catch (error) {\n                console.error('GroupView: Error loading group data:', error);\n                setGroupHabits([]);\n                setGroupMembers([]);\n                setCompletions([]);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadGroupData();\n    }, [group]);\n\n    const handleCreateHabit = (newHabit: GroupHabit) => {\n        setGroupHabits(prev => [...prev, newHabit])\n        setShowCreateHabitModal(false)\n    }\n\n    const handleToggleCompletion = async (habitId: string, userId: string) => {\n        try {\n            const today = new Date().toISOString().split('T')[0]\n            console.log('GroupView: Toggling completion for habit:', habitId, 'user:', userId, 'date:', today);\n            \n            // Get authentication token from Supabase session\n            const { createClient } = await import('@supabase/supabase-js');\n            \n            const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n            const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n            \n            if (!supabaseUrl || !supabaseKey) {\n                throw new Error('Supabase configuration missing');\n            }\n            \n            const supabase = createClient(supabaseUrl, supabaseKey);\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n            \n            if (sessionError) {\n                console.error('GroupView: Session error in toggle completion:', sessionError);\n                throw new Error('Failed to get authentication session');\n            }\n            \n            const token = session?.access_token;\n            console.log('GroupView: Toggle completion token retrieved:', token ? 'SUCCESS' : 'FAILED');\n            \n            if (!token) {\n                throw new Error('No authentication token available for completion toggle. Please log in again.');\n            }\n            \n            const headers = {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            };\n\n            // Call backend API to toggle completion\n            const response = await fetch(`http://localhost:8080/api/groups/${group.id}/habits/${habitId}/completions/toggle`, {\n                method: 'POST',\n                headers,\n                body: JSON.stringify({ date: today })\n            });\n\n            if (response.ok) {\n                const updatedCompletion = await response.json();\n                console.log('GroupView: Completion toggled successfully:', updatedCompletion);\n                \n                // Update local state with the response from backend\n                const existingCompletion = completions.find(\n                    c => c.groupHabitId === habitId && c.userId === userId && c.completionDate === today\n                );\n\n                if (existingCompletion) {\n                    // Update existing completion\n                    setCompletions(prev => \n                        prev.map(c => \n                            c.id === existingCompletion.id \n                                ? { ...updatedCompletion }\n                                : c\n                        )\n                    );\n                } else {\n                    // Add new completion\n                    setCompletions(prev => [...prev, updatedCompletion]);\n                }\n            } else {\n                console.error('GroupView: Failed to toggle completion:', response.status, response.statusText);\n            }\n        } catch (error) {\n            console.error('GroupView: Error toggling completion:', error);\n        }\n    }\n\n    if (loading) {\n        return (\n            <div className=\"glass-card p-6\">\n                <div className=\"animate-pulse space-y-4\">\n                    <div className=\"h-4 bg-ocean-200 rounded w-3/4\"></div>\n                    <div className=\"h-4 bg-ocean-200 rounded w-1/2\"></div>\n                    <div className=\"h-4 bg-ocean-200 rounded w-2/3\"></div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-6\">\n            {/* Group Header */}\n            <div className=\"glass-card p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                    <Button\n                        onClick={onBack}\n                        className=\"glass-button-sm flex items-center space-x-2\"\n                    >\n                        <ArrowLeft className=\"w-4 h-4\" />\n                        <span>Back to Groups</span>\n                    </Button>\n                    <Button className=\"glass-button-sm flex items-center space-x-2\">\n                        <Settings className=\"w-4 h-4\" />\n                        <span>Settings</span>\n                    </Button>\n                </div>\n\n                <div className=\"flex items-center space-x-4 mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-purple-400 to-purple-600 rounded-xl flex items-center justify-center\">\n                        <Users className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                        <h2 className=\"text-2xl font-bold text-ocean-800\">\n                            {group.name}\n                        </h2>\n                        {group.description && (\n                            <p className=\"text-ocean-600\">\n                                {group.description}\n                            </p>\n                        )}\n                    </div>\n                </div>\n\n                {/* Group ID for Invitations */}\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n                    <div className=\"flex items-center justify-between\">\n                        <div>\n                            <h3 className=\"text-sm font-semibold text-blue-800 mb-1\">\n                                Group ID (Share with friends to invite them)\n                            </h3>\n                            <div className=\"flex items-center space-x-2\">\n                                <code className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-md font-mono text-sm\">\n                                    {group.id}\n                                </code>\n                                <Button\n                                    onClick={() => {\n                                        navigator.clipboard.writeText(group.id);\n                                        console.log('Group ID copied to clipboard:', group.id);\n                                    }}\n                                    className=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 text-xs rounded-md\"\n                                >\n                                    Copy ID\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Group Members */}\n                <div className=\"flex items-center space-x-2 mb-4\">\n                    <Users className=\"w-4 h-4 text-ocean-600\" />\n                    <span className=\"text-sm text-ocean-600 font-medium\">Members:</span>\n                    <div className=\"flex items-center space-x-2\">\n                        {groupMembers.map((member, index) => (\n                            <span key={member.id} className=\"text-sm text-ocean-700\">\n                                {member.displayName || (member.email ? member.email.split('@')[0] : 'Unknown User')}\n                                {index < groupMembers.length - 1 && ','}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            {/* Group Habits */}\n            <div className=\"glass-card p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                    <h3 className=\"text-lg font-semibold text-ocean-800\">\n                        Group Habits\n                    </h3>\n                    <Button\n                        onClick={() => setShowCreateHabitModal(true)}\n                        className=\"glass-button-sm flex items-center space-x-2\"\n                    >\n                        <Plus className=\"w-4 h-4\" />\n                        <span>Add Habit</span>\n                    </Button>\n                </div>\n\n                <GroupHabitList\n                    habits={groupHabits}\n                    members={groupMembers}\n                    completions={completions}\n                    onToggleCompletion={handleToggleCompletion}\n                />\n            </div>\n\n            {/* Create Group Habit Modal */}\n            <CreateGroupHabitModal\n                isOpen={showCreateHabitModal}\n                onClose={() => setShowCreateHabitModal(false)}\n                onCreateHabit={handleCreateHabit}\n                groupId={group.id}\n            />\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2800, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/CreateGroupModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { X, Users, Copy, Check, CheckCircle } from 'lucide-react'\nimport { Group } from './GroupPanel'\n\ninterface CreateGroupModalProps {\n    isOpen: boolean\n    onClose: () => void\n    onCreateGroup: (group: Group) => void\n}\n\nconst API_BASE_URL = 'http://localhost:8080';\n\nexport default function CreateGroupModal({ isOpen, onClose, onCreateGroup }: CreateGroupModalProps) {\n    const [groupName, setGroupName] = useState('')\n    const [groupDescription, setGroupDescription] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState('')\n    const [createdGroup, setCreatedGroup] = useState<Group | null>(null)\n    const [copied, setCopied] = useState(false)\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        setLoading(true)\n        setError('')\n        \n        console.log('=== CreateGroupModal: Making authenticated API call ===');\n        console.log('Creating group:', { groupName, groupDescription });\n\n        try {\n            // Get authentication token from Supabase session\n            const { createClient } = await import('@supabase/supabase-js');\n            \n            // Get environment variables safely\n            const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n            const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n            \n            if (!supabaseUrl || !supabaseKey) {\n                throw new Error('Supabase configuration missing');\n            }\n            \n            const supabase = createClient(supabaseUrl, supabaseKey);\n            \n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n            \n            if (sessionError) {\n                console.error('Session error:', sessionError);\n                throw new Error('Failed to get authentication session');\n            }\n            \n            const token = session?.access_token;\n            \n            console.log('Token retrieved:', token ? 'SUCCESS' : 'FAILED');\n            console.log('Token length:', token?.length || 0);\n            \n            if (!token) {\n                throw new Error('No authentication token available. Please log in again.');\n            }\n            \n            const response = await fetch(`${API_BASE_URL}/api/groups`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ \n                    name: groupName.trim(), \n                    description: groupDescription.trim() \n                })\n            });\n\n            console.log('API Response status:', response.status);\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('API Error:', response.status, errorText);\n                throw new Error(`Failed to create group: ${response.status}`);\n            }\n\n            const newGroup = await response.json();\n            console.log('Group created successfully:', newGroup);\n            \n            setCreatedGroup(newGroup)\n            onCreateGroup(newGroup)\n            \n            // Reset form\n            setGroupName('')\n            setGroupDescription('')\n        } catch (error) {\n            console.error('=== CRITICAL ERROR in CreateGroupModal handleSubmit ===');\n            console.error('Error type:', typeof error);\n            console.error('Error message:', error instanceof Error ? error.message : String(error));\n            console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n            console.error('Full error object:', error);\n            \n            setError(error instanceof Error ? error.message : 'Failed to create group');\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const handleCopyGroupId = async () => {\n        if (createdGroup) {\n            try {\n                await navigator.clipboard.writeText(createdGroup.id)\n                setCopied(true)\n                setTimeout(() => setCopied(false), 2000)\n            } catch (error) {\n                console.error('Failed to copy group ID:', error)\n            }\n        }\n    }\n\n    const handleClose = () => {\n        setGroupName('')\n        setGroupDescription('')\n        setError('')\n        setCreatedGroup(null)\n        setCopied(false)\n        onClose()\n    }\n\n    if (!isOpen) return null\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4 shadow-xl\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-xl font-semibold text-gray-900 flex items-center gap-2\">\n                        <Users className=\"h-5 w-5 text-ocean-600\" />\n                        {createdGroup ? 'Group Created!' : 'Create New Group'}\n                    </h2>\n                    <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={handleClose}\n                        className=\"text-gray-400 hover:text-gray-600\"\n                    >\n                        <X className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n\n                {!createdGroup ? (\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        <div>\n                            <label htmlFor=\"groupName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Group Name *\n                            </label>\n                            <Input\n                                id=\"groupName\"\n                                type=\"text\"\n                                value={groupName}\n                                onChange={(e) => setGroupName(e.target.value)}\n                                placeholder=\"e.g., Medication Buddies, Health Accountability\"\n                                disabled={loading}\n                                className=\"w-full\"\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"groupDescription\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Description (Optional)\n                            </label>\n                            <Textarea\n                                id=\"groupDescription\"\n                                value={groupDescription}\n                                onChange={(e) => setGroupDescription(e.target.value)}\n                                placeholder=\"Describe the purpose of this group...\"\n                                disabled={loading}\n                                rows={3}\n                                className=\"w-full\"\n                            />\n                        </div>\n\n                        {error && (\n                            <div className=\"text-red-600 text-sm bg-red-50 p-2 rounded\">\n                                {error}\n                            </div>\n                        )}\n\n                        <div className=\"flex gap-3 pt-4\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={handleClose}\n                                disabled={loading}\n                                className=\"flex-1\"\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={loading || !groupName.trim()}\n                                className=\"flex-1 bg-ocean-600 hover:bg-ocean-700\"\n                            >\n                                {loading ? 'Creating...' : 'Create Group'}\n                            </Button>\n                        </div>\n                    </form>\n                ) : (\n                    <div className=\"space-y-4\">\n                        {createdGroup && (\n                            <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                                <div className=\"flex items-center space-x-2 mb-3\">\n                                    <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                                    <h4 className=\"font-semibold text-green-800\">Group Created Successfully!</h4>\n                                </div>\n                                \n                                <div className=\"space-y-3\">\n                                    <div>\n                                        <p className=\"text-sm text-green-700 mb-2\">\n                                            <strong>Group Name:</strong> {createdGroup.name}\n                                        </p>\n                                        <p className=\"text-sm text-green-700 mb-3\">\n                                            Share this Group ID with others so they can join:\n                                        </p>\n                                    </div>\n                                    \n                                    <div className=\"flex items-center space-x-2 p-3 bg-white border border-green-300 rounded-lg\">\n                                        <code className=\"flex-1 text-sm font-mono text-gray-800 bg-gray-50 px-2 py-1 rounded\">\n                                            {createdGroup.id}\n                                        </code>\n                                        <Button\n                                            onClick={handleCopyGroupId}\n                                            variant=\"outline\"\n                                            size=\"sm\"\n                                            className=\"flex items-center space-x-1\"\n                                        >\n                                            {copied ? (\n                                                <>\n                                                    <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                                                    <span className=\"text-green-600\">Copied!</span>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <Copy className=\"w-4 h-4\" />\n                                                    <span>Copy</span>\n                                                </>\n                                            )}\n                                        </Button>\n                                    </div>\n                                    \n                                    <div className=\"text-xs text-green-600 space-y-1\">\n                                        <p>• Others can join by clicking \"Join Group\" and entering this ID</p>\n                                        <p>• You can also share this ID via text, email, or any messaging app</p>\n                                        <p>• Keep this ID safe - anyone with it can join your group</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                        \n                        <Button\n                            onClick={handleClose}\n                            className=\"w-full bg-ocean-600 hover:bg-ocean-700\"\n                        >\n                            Done\n                        </Button>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3300, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/JoinGroupModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { X, Users, Copy } from 'lucide-react'\n\ninterface JoinGroupModalProps {\n    isOpen: boolean\n    onClose: () => void\n    onJoinGroup: (groupId: string) => void\n}\n\nexport default function JoinGroupModal({ isOpen, onClose, onJoinGroup }: JoinGroupModalProps) {\n    const [groupId, setGroupId] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState('')\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        if (!groupId.trim()) {\n            setError('Please enter a Group ID')\n            return\n        }\n\n        setLoading(true)\n        setError('')\n\n        try {\n            // Get authentication token from Supabase session\n            const { createClient } = await import('@supabase/supabase-js');\n            \n            const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n            const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n            \n            if (!supabaseUrl || !supabaseKey) {\n                throw new Error('Supabase configuration missing');\n            }\n            \n            const supabase = createClient(supabaseUrl, supabaseKey);\n            const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n            \n            if (sessionError) {\n                console.error('JoinGroupModal: Session error:', sessionError);\n                throw new Error('Failed to get authentication session');\n            }\n            \n            const token = session?.access_token;\n            console.log('JoinGroupModal: Token retrieved:', token ? 'SUCCESS' : 'FAILED');\n            \n            if (!token) {\n                throw new Error('No authentication token available. Please log in again.');\n            }\n            \n            const response = await fetch(`http://localhost:8080/api/groups/${groupId}/join`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n\n            if (response.ok) {\n                onJoinGroup(groupId)\n                setGroupId('')\n                onClose()\n            } else {\n                const errorData = await response.json()\n                setError(errorData.message || 'Failed to join group. Please check the Group ID.')\n            }\n        } catch (error) {\n            console.error('Error joining group:', error)\n            setError('Failed to join group. Please try again.')\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    const handleClose = () => {\n        setGroupId('')\n        setError('')\n        onClose()\n    }\n\n    if (!isOpen) return null\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4 shadow-xl\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-xl font-semibold text-gray-900 flex items-center gap-2\">\n                        <Users className=\"h-5 w-5 text-ocean-600\" />\n                        Join Group\n                    </h2>\n                    <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={handleClose}\n                        className=\"text-gray-400 hover:text-gray-600\"\n                    >\n                        <X className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                    <div>\n                        <Label htmlFor=\"groupId\" className=\"text-sm font-medium text-gray-700\">\n                            Group ID\n                        </Label>\n                        <Input\n                            id=\"groupId\"\n                            type=\"text\"\n                            value={groupId}\n                            onChange={(e) => setGroupId(e.target.value)}\n                            placeholder=\"Enter the Group ID to join\"\n                            className=\"mt-1\"\n                            disabled={loading}\n                        />\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                            Ask the group creator to share their Group ID with you\n                        </p>\n                    </div>\n\n                    {error && (\n                        <div className=\"text-red-600 text-sm bg-red-50 p-2 rounded\">\n                            {error}\n                        </div>\n                    )}\n\n                    <div className=\"flex gap-3 pt-4\">\n                        <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            onClick={handleClose}\n                            disabled={loading}\n                            className=\"flex-1\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            disabled={loading || !groupId.trim()}\n                            className=\"flex-1 bg-ocean-600 hover:bg-ocean-700\"\n                        >\n                            {loading ? 'Joining...' : 'Join Group'}\n                        </Button>\n                    </div>\n                </form>\n\n                <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                    <h3 className=\"text-sm font-medium text-gray-700 mb-2\">\n                        How to join a group:\n                    </h3>\n                    <ol className=\"text-xs text-gray-600 space-y-1\">\n                        <li>1. Get the Group ID from the group creator</li>\n                        <li>2. Enter the Group ID above</li>\n                        <li>3. Click \"Join Group\" to become a member</li>\n                        <li>4. Start tracking habits together!</li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/components/groups/GroupPanel.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Plus, Users, Settings } from 'lucide-react'\nimport GroupList from './GroupList'\nimport GroupView from './GroupView'\nimport CreateGroupModal from './CreateGroupModal'\nimport JoinGroupModal from './JoinGroupModal'\n\n// Import the authentication function from api.ts\nasync function getAuthHeaders() {\n    try {\n        // Try to get Supabase client only if environment variables are available\n        const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n        const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n        \n        if (supabaseUrl && supabaseKey) {\n            const { createClient } = await import('@supabase/supabase-js')\n            const supabase = createClient(supabaseUrl, supabaseKey)\n            \n            // Get real Supabase session\n            const { data: { session } } = await supabase.auth.getSession()\n            \n            if (session?.access_token) {\n                console.log('Using real Supabase token for authenticated user');\n                return {\n                    'Authorization': `Bearer ${session.access_token}`,\n                    'Content-Type': 'application/json',\n                };\n            } else {\n                console.error('No Supabase session found - user must be logged in');\n                throw new Error('User not authenticated - please log in');\n            }\n        } else {\n            console.error('Supabase environment variables not configured');\n            throw new Error('Authentication not configured');\n        }\n    } catch (error) {\n        console.error('Authentication failed:', error instanceof Error ? error.message : 'Unknown error');\n        throw error;\n    }\n}\n\nexport interface Group {\n    id: string\n    name: string\n    description?: string\n    created_by: string\n    created_at: string\n    updated_at: string\n    member_count?: number\n}\n\nconst API_BASE_URL = 'http://localhost:8080';\n\nexport default function GroupPanel() {\n    const [groups, setGroups] = useState<Group[]>([])\n    const [selectedGroup, setSelectedGroup] = useState<Group | null>(null)\n    const [showCreateModal, setShowCreateModal] = useState(false)\n    const [showJoinModal, setShowJoinModal] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    // Load groups from API\n    useEffect(() => {\n        const loadGroups = async () => {\n            try {\n                console.log('=== INTENSIVE DEBUGGING: GroupPanel loadGroups START ===');\n                console.log('GroupPanel: Loading groups from API...');\n                \n                const authHeaders = await getAuthHeaders();\n                \n                const response = await fetch(`${API_BASE_URL}/api/groups`, {\n                    method: 'GET',\n                    headers: authHeaders,\n                });\n                \n                console.log('DEBUGGING: API response status:', response.status);\n                console.log('DEBUGGING: API response headers:', Object.fromEntries(response.headers.entries()));\n                \n                if (!response.ok) {\n                    console.error('DEBUGGING: API response not OK:', response.status, response.statusText);\n                    const errorText = await response.text();\n                    console.error('DEBUGGING: Error response body:', errorText);\n                    throw new Error(`Failed to fetch groups: ${response.status} ${response.statusText}`);\n                }\n                \n                const rawData = await response.json();\n                console.log('DEBUGGING: Raw API response type:', typeof rawData);\n                console.log('DEBUGGING: Raw API response is array:', Array.isArray(rawData));\n                console.log('DEBUGGING: Raw API response length:', rawData?.length);\n                console.log('DEBUGGING: Raw API response full data:', JSON.stringify(rawData, null, 2));\n                \n                // Detailed analysis of each group object\n                if (Array.isArray(rawData)) {\n                    rawData.forEach((group, index) => {\n                        console.log(`DEBUGGING: Group ${index}:`, JSON.stringify(group, null, 2));\n                        console.log(`DEBUGGING: Group ${index} keys:`, Object.keys(group || {}));\n                        console.log(`DEBUGGING: Group ${index} has id:`, !!group?.id);\n                        console.log(`DEBUGGING: Group ${index} has name:`, !!group?.name);\n                        console.log(`DEBUGGING: Group ${index} id value:`, group?.id);\n                        console.log(`DEBUGGING: Group ${index} name value:`, group?.name);\n                    });\n                }\n                \n                const validGroups = rawData.filter((group: any) => {\n                    console.log('DEBUGGING: Group validation:', {\n                        group: JSON.stringify(group),\n                        hasGroup: !!group,\n                        hasId: !!group?.id,\n                        hasName: !!group?.name,\n                        groupKeys: Object.keys(group || {}),\n                    });\n                    \n                    const isValid = group && group.id && group.name;\n                    \n                    if (!isValid) {\n                        console.error('GroupPanel: Invalid group found:', group);\n                        console.error('GroupPanel: Invalid group type:', typeof group);\n                        console.error('GroupPanel: Invalid group keys:', Object.keys(group || {}));\n                    }\n                    \n                    return isValid;\n                });\n                \n                console.log('DEBUGGING: Valid groups after filtering:', validGroups.length);\n                console.log('DEBUGGING: Valid groups data:', JSON.stringify(validGroups, null, 2));\n                \n                setGroups(validGroups);\n                console.log('=== INTENSIVE DEBUGGING: GroupPanel loadGroups END ===');\n            } catch (error) {\n                console.error('=== CRITICAL ERROR in GroupPanel loadGroups ===');\n                console.error('Error type:', typeof error);\n                console.error('Error message:', error instanceof Error ? error.message : 'Unknown error');\n                console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n                console.error('Full error object:', error);\n                setGroups([]);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadGroups();\n    }, [])\n\n    const handleCreateGroup = (newGroup: any) => {\n        console.log('New group created:', newGroup);\n        if (newGroup && newGroup.id) {\n            setGroups(prevGroups => [...prevGroups, newGroup]);\n            setSelectedGroup(newGroup);\n            console.log('Selected new group:', newGroup.id);\n        } else {\n            console.error('Invalid group created:', newGroup);\n        }\n        setShowCreateModal(false);\n    };\n\n    const handleJoinGroup = async (groupId: string) => {\n        // Reload groups after joining\n        try {\n            const authHeaders = await getAuthHeaders();\n            const response = await fetch(`${API_BASE_URL}/api/groups`, {\n                headers: authHeaders\n            });\n            if (response.ok) {\n                const userGroups = await response.json();\n                setGroups(userGroups);\n            }\n        } catch (error) {\n            console.error('Error reloading groups:', error);\n        }\n        setShowJoinModal(false)\n    }\n\n    const handleSelectGroup = (group: any) => {\n        console.log('Selecting group:', group);\n        if (group && group.id) {\n            setSelectedGroup(group);\n            console.log('Group selected successfully:', group.id);\n        } else {\n            console.error('Invalid group selected:', group);\n        }\n    };\n\n    const handleBackToGroups = () => {\n        setSelectedGroup(null)\n    }\n\n    if (loading) {\n        return (\n            <div className=\"glass-card p-6\">\n                <div className=\"animate-pulse space-y-4\">\n                    <div className=\"h-4 bg-ocean-200 rounded w-3/4\"></div>\n                    <div className=\"h-4 bg-ocean-200 rounded w-1/2\"></div>\n                    <div className=\"h-4 bg-ocean-200 rounded w-2/3\"></div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-6\">\n            {!selectedGroup ? (\n                <>\n                    {/* Groups Overview */}\n                    <div className=\"glass-card p-6\">\n                        <div className=\"flex items-center justify-between mb-4\">\n                            <div className=\"flex items-center space-x-2\">\n                                <Users className=\"w-5 h-5 text-ocean-600\" />\n                                <h3 className=\"text-lg font-semibold text-ocean-800\">\n                                    Your Groups\n                                </h3>\n                            </div>\n                            <div className=\"flex space-x-2\">\n                                <Button\n                                    onClick={() => setShowCreateModal(true)}\n                                    className=\"glass-button-sm flex items-center space-x-2\"\n                                >\n                                    <Plus className=\"w-4 h-4\" />\n                                    <span>Create Group</span>\n                                </Button>\n                                <Button\n                                    onClick={() => setShowJoinModal(true)}\n                                    className=\"glass-button-sm flex items-center space-x-2\"\n                                >\n                                    <Users className=\"w-4 h-4\" />\n                                    <span>Join Group</span>\n                                </Button>\n                            </div>\n                        </div>\n                        \n                        <GroupList \n                            groups={groups}\n                            onSelectGroup={handleSelectGroup}\n                        />\n                    </div>\n                </>\n            ) : (\n                <GroupView \n                    group={selectedGroup}\n                    onBack={handleBackToGroups}\n                />\n            )}\n\n            {/* Create Group Modal */}\n            <CreateGroupModal\n                isOpen={showCreateModal}\n                onClose={() => setShowCreateModal(false)}\n                onCreateGroup={handleCreateGroup}\n            />\n\n            {/* Join Group Modal */}\n            <JoinGroupModal\n                isOpen={showJoinModal}\n                onClose={() => setShowJoinModal(false)}\n                onJoinGroup={handleJoinGroup}\n            />\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3933, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mshra/Documents/Shravan/Career/Coding%20projects/CRUD%201/Backend/Habits-Together/Project/src/main/resources/static/my-app/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useAuth } from '@/contexts/AuthContext'\nimport { useRouter } from 'next/navigation'\nimport { useEffect, useState } from 'react'\nimport ProtectedRoute from '@/components/ProtectedRoute'\nimport HabitList from '@/components/habits/HabitList'\nimport GroupPanel from '@/components/groups/GroupPanel'\nimport { Button } from '@/components/ui/button'\nimport { LogOut, Activity, Users, User } from 'lucide-react'\n\nexport default function Home() {\n    const { user, signOut } = useAuth()\n    const router = useRouter()\n\n    const handleSignOut = async () => {\n        await signOut()\n        router.push('/login')\n    }\n\n    return (\n        <ProtectedRoute>\n            <div className=\"min-h-screen relative\">\n                <header className=\"glass-card border-b border-white/10 backdrop-blur-xl\">\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                        <div className=\"flex justify-between items-center py-6\">\n                            <div className=\"flex items-center space-x-4\">\n                                <div className=\"flex items-center space-x-3\">\n                                    <div className=\"w-12 h-12 bg-gradient-to-br from-ocean-400 to-ocean-600 rounded-2xl flex items-center justify-center shadow-soft\">\n                                        <Activity className=\"w-7 h-7 text-white\" />\n                                    </div>\n                                    <div>\n                                        <h1 className=\"text-3xl font-bold text-gradient-blue\">\n                                            Habit Tracker\n                                        </h1>\n                                        <p className=\"text-sm text-ocean-600\">\n                                            Build better routines together\n                                        </p>\n                                    </div>\n                                </div>\n                                <div className=\"hidden md:flex items-center space-x-6 ml-8\">\n                                    <div className=\"flex items-center space-x-2 text-ocean-700\">\n                                        <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                                        <span className=\"text-sm font-medium\">\n                                            Welcome, {user?.email?.split('@')[0] || 'User'}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Button \n                                onClick={handleSignOut} \n                                className=\"glass-button flex items-center space-x-2\"\n                            >\n                                <LogOut className=\"w-4 h-4\" />\n                                <span>Sign Out</span>\n                            </Button>\n                        </div>\n                    </div>\n                </header>\n\n                <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n                    {/* Two-column layout */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                        {/* Left Column - Personal Habits */}\n                        <div className=\"space-y-6\">\n                            <div className=\"flex items-center space-x-3 mb-4\">\n                                <div className=\"w-10 h-10 bg-gradient-to-br from-cream-400 to-cream-600 rounded-xl flex items-center justify-center\">\n                                    <User className=\"w-6 h-6 text-white\" />\n                                </div>\n                                <div>\n                                    <h2 className=\"text-2xl font-bold text-ocean-800\">\n                                        Personal Habits\n                                    </h2>\n                                    <p className=\"text-ocean-600\">\n                                        Your individual daily routines\n                                    </p>\n                                </div>\n                            </div>\n                            \n                            {/* Simple Today's Progress Text */}\n                            <div className=\"glass-card p-4 mb-6\">\n                                <div className=\"text-sm text-ocean-600 font-medium mb-1\">\n                                    Today's Progress\n                                </div>\n                                <div className=\"text-ocean-800\">\n                                    Check off your habits to track your daily progress\n                                </div>\n                            </div>\n                            \n                            <HabitList />\n                        </div>\n\n                        {/* Right Column - Group Habits */}\n                        <div className=\"space-y-6\">\n                            <div className=\"flex items-center space-x-3 mb-4\">\n                                <div className=\"w-10 h-10 bg-gradient-to-br from-purple-400 to-purple-600 rounded-xl flex items-center justify-center\">\n                                    <Users className=\"w-6 h-6 text-white\" />\n                                </div>\n                                <div>\n                                    <h2 className=\"text-2xl font-bold text-ocean-800\">\n                                        Group Habits\n                                    </h2>\n                                    <p className=\"text-ocean-600\">\n                                        Shared accountability with friends and family\n                                    </p>\n                                </div>\n                            </div>\n                            \n                            <GroupPanel />\n                        </div>\n                    </div>\n                </main>\n            </div>\n        </ProtectedRoute>\n    )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AATA;;;;;;;;;AAWe,SAAS;IACpB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAO,AAAD;IAChC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,gBAAgB;QAClB,MAAM;QACN,OAAO,IAAI,CAAC;IAChB;IAEA,qBACI,8OAAC,6HAAA,CAAA,UAAc;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAO,WAAU;8BACd,cAAA,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAI,WAAU;8DACX,cAAA,8OAAC,0MAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;8DAExB,8OAAC;;sEACG,8OAAC;4DAAG,WAAU;sEAAwC;;;;;;sEAGtD,8OAAC;4DAAE,WAAU;sEAAyB;;;;;;;;;;;;;;;;;;sDAK9C,8OAAC;4CAAI,WAAU;sDACX,cAAA,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAI,WAAU;;;;;;kEACf,8OAAC;wDAAK,WAAU;;4DAAsB;4DACxB,MAAM,OAAO,MAAM,IAAI,CAAC,EAAE,IAAI;;;;;;;;;;;;;;;;;;;;;;;;8CAKxD,8OAAC,2HAAA,CAAA,SAAM;oCACH,SAAS;oCACT,WAAU;;sDAEV,8OAAC,0MAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;sDAClB,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAMtB,8OAAC;oBAAK,WAAU;8BAEZ,cAAA,8OAAC;wBAAI,WAAU;;0CAEX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DACX,cAAA,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;;;;;;0DAEpB,8OAAC;;kEACG,8OAAC;wDAAG,WAAU;kEAAoC;;;;;;kEAGlD,8OAAC;wDAAE,WAAU;kEAAiB;;;;;;;;;;;;;;;;;;kDAOtC,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DAA0C;;;;;;0DAGzD,8OAAC;gDAAI,WAAU;0DAAiB;;;;;;;;;;;;kDAKpC,8OAAC,kIAAA,CAAA,UAAS;;;;;;;;;;;0CAId,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DACX,cAAA,8OAAC,oMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;;;;;;0DAErB,8OAAC;;kEACG,8OAAC;wDAAG,WAAU;kEAAoC;;;;;;kEAGlD,8OAAC;wDAAE,WAAU;kEAAiB;;;;;;;;;;;;;;;;;;kDAMtC,8OAAC,mIAAA,CAAA,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvC","debugId":null}}]
}